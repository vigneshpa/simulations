{"version":3,"file":"assets/bundle.js","mappings":"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","sources":["webpack://simulations/webpack/bootstrap","webpack://simulations/webpack/runtime/publicPath","webpack://simulations/./src/inductor/index.ts"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.p = \"./\";","import './style.css'; // importing style sheet\n\nconst visiblePercision = 1;\n\n// Maximums\nconst voltageMax = 10;\nconst currentMax = 2;\nconst resistanceMax = 10;\nconst inductanceMax = 10;\n\n// Controlables\nconst controls = {\n  Voltage: 0, // in Volts (V)\n  Resistance: 5, // in Ohms (Ω)\n  Inductance: 5, // in Henries (H)\n};\n\n// Constants\nconst sineWaveFrequency = 0.2; // in Hertz (Hz)\nconst sineWaveAngularVelocity = 2 * Math.PI * sineWaveFrequency; // in rad/sec as ω=2πf\nconst initialInductorCurrent = () => -voltageMax / (controls.Inductance * sineWaveAngularVelocity); // as -I₀=-E₀/Lω\nconst angularVelocityCurrentRatio = 1;\nconst integrateResistorCurrent = (delta: number) => controls.Voltage / controls.Resistance; // as V=iR\nconst integrateInductorCurrent = (delta: number) => (currentIntegral += (delta * controls.Voltage) / controls.Inductance); // as V=-L(di/dt)\nconst integrateResIndCurrent = (delta: number) =>\n  (currentIntegral += (delta * (controls.Voltage - currentIntegral * controls.Resistance)) / controls.Inductance); // as V=-L(di/dt)+iR\n\n// Internal variables\nlet currentIntegral: number = 0; // Curent integral in Ampere (A)\nlet rps = 0; // Angular velocity in rotations per second\nlet wheelR: number = 0; // Wheel angle in turns\nlet loadtype: 'Resistive' | 'Inductive' | 'ResInd' | 'InductiveCorrected' = 'Resistive';\nlet generateSine: boolean = false;\nlet generatorStartTS: number | null = null;\nlet previousTS: number = 0;\n\n// integration function variable\nlet integrateCurrent = integrateResistorCurrent;\n\n// Adding wheel element\nconst wheelEl = document.createElement('img');\nwheelEl.id = 'flywheel';\nwheelEl.src = require('./flywheel.svg');\ndocument.getElementById('view')!.append(wheelEl);\n\nconst changeGenerateSine = (checked: boolean) => {\n  generatorStartTS = null;\n  currentIntegral = 0;\n  rps = 0;\n  generateSine = !!checked;\n  if (generateSine && loadtype === 'InductiveCorrected') currentIntegral = initialInductorCurrent();\n};\n\nconst changeCircuitType = (loadt: typeof loadtype) => {\n  currentIntegral = 0;\n  loadtype = loadt;\n  if (generateSine) changeGenerateSine(true);\n  switch (loadt) {\n    case 'Resistive':\n      integrateCurrent = integrateResistorCurrent;\n      break;\n    case 'Inductive':\n      integrateCurrent = integrateInductorCurrent;\n      break;\n    case 'ResInd':\n      integrateCurrent = integrateResIndCurrent;\n      break;\n    case 'InductiveCorrected':\n      integrateCurrent = integrateInductorCurrent;\n      break;\n    default:\n      integrateCurrent = integrateResistorCurrent;\n  }\n};\n\nconst step: FrameRequestCallback = timeStamp => {\n  const delta = (timeStamp - previousTS) / 1000; // calculating delta and converting it to seconds\n\n  const current = integrateCurrent(delta);\n\n  rps = angularVelocityCurrentRatio * current;\n\n  wheelR += rps * delta * 360;\n  if (wheelR > -5000 && wheelR < 5000) wheelR = wheelR % 360;\n  wheelEl.style.transform = `rotate(${wheelR}deg)`;\n\n  // --\n  curEl.innerText = current.toFixed(visiblePercision);\n  curPgr.value = current + currentMax;\n  if (!generatorStartTS) generatorStartTS = timeStamp;\n  if (generateSine) voltageControl.change(voltageMax * Math.sin(((timeStamp - generatorStartTS) * sineWaveAngularVelocity) / 1000));\n  previousTS = timeStamp;\n  window.requestAnimationFrame(step);\n};\nwindow.requestAnimationFrame(step);\n\n// Populating controls -----\n\n// Shortcut functions\nconst br = () => document.createElement('br');\n\n// getting control element\nconst controlsDiv = document.getElementById('controls')!;\n\n// Appending current\nconst curEl = document.createElement('span');\ncurEl.innerText = '0.0';\ncontrolsDiv.append('Current : ', curEl, 'A', br());\n\n// Appending current progress\nconst curPgr = document.createElement('progress');\ncurPgr.max = currentMax * 2;\ncurPgr.value = 2;\ncontrolsDiv.append(curPgr, br());\n\n// Appending controls.Voltage\nconst voltageControl = createControl('Voltage', voltageMax, -voltageMax, 'V');\ncontrolsDiv.append(...voltageControl.nodes, br());\n\n// Appending generate sine\nconst generateSineInp = document.createElement('input');\ngenerateSineInp.type = 'checkbox';\ngenerateSineInp.id = 'generateSine';\ngenerateSineInp.onchange = ev => changeGenerateSine(generateSineInp.checked);\nconst generateSineInpLbl = document.createElement('label');\ngenerateSineInpLbl.htmlFor = 'generateSine';\ngenerateSineInpLbl.innerText = `Generate Sine Wave (${sineWaveFrequency}Hz)`;\ncontrolsDiv.append(generateSineInp, generateSineInpLbl, br());\n\n// Appending circuit type selector\nconst circuitDiv = document.createElement('div');\nconst circuitDivHeading = document.createElement('h4');\ncircuitDivHeading.innerText = 'Select Circuit Type:';\ncircuitDiv.append(circuitDivHeading);\nconst handlers = {\n  'Pure Resistor': () => changeCircuitType('Resistive'),\n  'Pure Inductor': () => changeCircuitType('Inductive'),\n  'Pure Inductor (initial current corrected)': () => changeCircuitType('InductiveCorrected'),\n  'RL Series Circuit': () => changeCircuitType('ResInd'),\n};\nfor (const text in handlers) {\n  if (Object.prototype.hasOwnProperty.call(handlers, text)) {\n    const inpt = document.createElement('input');\n    inpt.type = 'radio';\n    inpt.name = 'circuitType';\n    if (text === 'Pure Resistor') inpt.checked = true;\n    inpt.id = text;\n    inpt.onchange = (<any>handlers)[text];\n    circuitDiv.append(inpt);\n    const lbl = document.createElement('label');\n    lbl.innerText = text;\n    lbl.htmlFor = text;\n    circuitDiv.append(lbl, br());\n  }\n}\ncontrolsDiv.append(circuitDiv);\n\n// Appending circuit components\nconst componentsDiv = document.createElement('div');\nconst constantsDivHeading = document.createElement('h4');\nconstantsDivHeading.innerText = 'Circuit Components';\ncomponentsDiv.append(constantsDivHeading);\n\n// Inductance control\ncomponentsDiv.append(...createControl('Inductance', inductanceMax, 0.1, 'H').nodes);\n\n// I\n\ncomponentsDiv.append(...createControl('Resistance', resistanceMax, 0.1, 'Ω').nodes);\ncontrolsDiv.append(componentsDiv);\n\nfunction createControl(name: keyof typeof controls, max: number, min: number, unitSymbol: string) {\n  const labelEl = document.createElement('label');\n  labelEl.htmlFor = name;\n  const valueEl = document.createElement('span');\n  valueEl.innerText = controls[name] as unknown as string;\n  labelEl.append(name + ' : ', valueEl, unitSymbol);\n  const contorlEL = document.createElement('input');\n  contorlEL.type = 'range';\n  contorlEL.max = max + '';\n  contorlEL.min = min + '';\n  contorlEL.step = '0.1';\n  contorlEL.id = name;\n  const change = (value: number) => (contorlEL.value = (controls[name] = value).toFixed(visiblePercision));\n  change(controls[name]);\n  contorlEL.oninput = ev => (valueEl.innerText = (controls[name] = +contorlEL.value).toFixed(visiblePercision));\n  return { nodes: [labelEl, br(), contorlEL, br()], change };\n}\n"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","p","controls","Voltage","Resistance","Inductance","sineWaveAngularVelocity","Math","PI","integrateResistorCurrent","delta","integrateInductorCurrent","currentIntegral","integrateResIndCurrent","rps","wheelR","loadtype","generateSine","generatorStartTS","previousTS","integrateCurrent","wheelEl","document","createElement","id","src","getElementById","append","changeGenerateSine","checked","changeCircuitType","loadt","step","timeStamp","current","style","transform","curEl","innerText","toFixed","curPgr","value","voltageControl","change","sin","window","requestAnimationFrame","br","controlsDiv","max","currentMax","createControl","nodes","generateSineInp","type","onchange","ev","generateSineInpLbl","htmlFor","circuitDiv","circuitDivHeading","handlers","text","Object","prototype","hasOwnProperty","call","inpt","name","lbl","componentsDiv","constantsDivHeading","min","unitSymbol","labelEl","valueEl","contorlEL","oninput"],"sourceRoot":""}